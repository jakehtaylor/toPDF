
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://unpkg.com/canvg@3.0.4/lib/umd.js"></script>
    <script type="text/javascript" src="/jspdf.js"></script>
    <script type="text/javascript" src="/FileSaver.js"></script>
    <script type="text/javascript" src="/zlib.js"></script>
    <script type="text/javascript" src="/png.js"></script>
    <script type="text/javascript" src="/png_support.js"></script>
    <script type="text/javascript" src="/html2canvas.min.js"></script>
    <script type="text/javascript" src="/purify.min.js"></script>
    <script type="text/javascript" src="/addimage.js"></script>
    <script type="text/javascript" src="/split_text_to_size.js"></script>
    <script type="text/javascript" src="/standard_fonts_metrics.js"></script>

    
    
    <title>Document</title>
    <style>
        @font-face {
            font-family: "Roboto-Bold";
            src: url('fonts/Roboto-Bold.ttf');
        }
        @font-face {
            font-family: "Roboto-Regular";
            src: url('fonts/Roboto-Regular.ttf');
        }

        .dealer {
            font-size: 18;
            font-family: 'Roboto-Bold';
            width: 2.5in;
            height: 0.3in;
            text-align: center
        }
        .m_y {
            font-size: 14;
            text-align: center;
            font-family: 'Roboto-Regular';
            color: black;
            width: 1.33;
            height: 0.21
        }

        .statistic {
            font-size: 20;
            font-family: 'Roboto-Black';
            color: rgb(2, 121, 161)
        }

        .category {
            font-size: 9;
        }
       
        .wrap {
            border: 5px rgb(2, 121, 161) solid;
            border-radius: 50%;
            min-height: 1.25in;
            min-width: 1.25in;
        }

    </style>
</head>
<body> 
        <div class="dealer" id="dealership" data-_x=2.5 data-_y=1.4> </div>
        <div class="m_y" id="month" data-_x=3.3 data-_y=1.75> </div>
    
    <img id="jMG" src="pwrd_by_jmg.png" data-_w=8.53 data-_h=0.5 data-_x=0 data-_y=10.5>
    <img id="saDI" src="SDintel.png" data-_w=8.53 data-_h=0.5508 data-_x=0 data-_y=2.0625>
    <img id="seDI" src="SeDintel.png" data-_w=8.53 data-_h=0.5508 data-_x=0 data-_y=7.4375>
    <img id="dIR" src="DIReport.png" data-_w=8.53 data-_h=1 data-_x=0 data-_y=0>

    <div id="saRow2"  data-_y=5.1875 data-_x1=0.6875 data-_x_spacing=1.9375></div>
    <div id="saRow1"  data-_y=2.875 data-_x1=0.6875 data-_x_spacing=1.9375></div>
    <div id="seRow1"  data-_y=8.25 data-_x1=1.625 data-_x_spacing=2.007></div>
    <script type="text/javascript">
        console.log('HORRAY')
    
        
        var objects =  (JSON.parse("<%=schema%>".replace(/&#34;/g, '"').replace(/&#39;/g, "'"))).objects
        var icon_elements = []
        var borders = []
        var text_blurbs = []
        var statistics = []
        var z = 0
        var y = 0
        var x = 0
        for (var i=0; i<objects.length; i++) {
            text_blurbs.push(objects[i].display_text);
            
            if (objects[i].hasOwnProperty('format')) {
                statistics.push([objects[i].field_name, objects[i].format]);
            } else {
                statistics.push(objects[i].field_name);
            }

            var img = document.createElement('img')
            var border = document.createElement('img')
            border.id = "border" + String(i);
            border['data-_w'] = 1.4
            border['data-_h'] = 1.4
            img.src = "icons/" + objects[i].icon_name
            img.id = 'img' + String(i);
            img['data-_w'] = objects[i].w
            img['data-_h'] = objects[i].h
            if (i > 3) {
                if (i > 7) {  
                    border['data-_y'] = $("#seRow1").data('_y');
                    border['data-_x'] = $("#seRow1").data('_x1') + (z * $("#seRow1").data('_x_spacing'));
                    img['data-_y']  = border['data-_y'] + ((border['data-_h']-img['data-_h'])/2)
                    img['data-_x'] = border['data-_x'] + ((border['data-_w']-img['data-_w'])/2)
                    z += 1
                } else {
                    border['data-_y'] = $("#saRow2").data('_y');
                    border['data-_x'] = $("#saRow2").data('_x1') + (y * $("#saRow2").data('_x_spacing'));
                    img['data-_y']  = border['data-_y'] + ((border['data-_h']-img['data-_h'])/2)
                    img['data-_x'] = border['data-_x'] + ((border['data-_w']-img['data-_w'])/2)
                    y += 1                 
                }
            } else {
                border['data-_y'] = $("#saRow1").data('_y') ;
                border['data-_x'] = $("#saRow1").data('_x1') + (x * $("#saRow1").data('_x_spacing'));
                img['data-_y']  = border['data-_y'] + ((border['data-_h']-img['data-_h'])/2)
                img['data-_x'] = border['data-_x'] + ((border['data-_w']-img['data-_w'])/2)
                x += 1
            }

        
            document.body.append(img);
            document.body.append(border)
            $(`#${border.id}`).addClass("wrap")
            icon_elements.push(img);
            borders.push(border)
        };

        function dealerFont(doc) {
        doc.setFont('helvetica', 'bold')
        doc.setFontSize(18)
        doc.setTextColor('#000000')
        }
        function dateFont(doc) {
        doc.setFont('helvetica', 'normal')
        doc.setFontSize(14)
        doc.setTextColor('#000000')
        }
        function statFont(doc) {
        doc.setFont('helvetica', 'bold')
        doc.setFontSize(20)
        doc.setTextColor('#0279A1')
        }
        function textFont(doc) {
        doc.setFont('helvetica', 'normal')
        doc.setFontSize(9)
        doc.setTextColor('#000000')
        }

        var s1 = "<%=sheet1%>";
        var rs1 = s1.replace(/&#34;/g, '"').replace(/&#39;/g, "'")
        var ds1 = JSON.parse(rs1);

        for (var d=0; d < 1/*ds1.objects.length*/; d++) {
            const doc = new jsPDF({
                orientation: 'p',
                unit: "in",
                format: [8.5, 11]
            });

            var deferreds = [];

            values = []
            var value;
            var value_unformatted;
            for (var j=0; j < statistics.length; j++ ) {
                if (Array.isArray(statistics[j])) {
                    value_unformatted = ds1.objects[d][statistics[j][0]]
                    format = statistics[j][1]
                    if (format == 'percent') {
                        value = String(value_unformatted*100) + '%'
                    }
                } else {
                    value = ds1.objects[d][statistics[j]]
                    if (value != undefined) {
                        value = parseInt(value).toLocaleString() // "1,234.57"
                    } else {
                        value = "N/A"
                    }
                }
            values.push(value)
            }

            var dealership = ds1.objects[d].account_name
            const dealer_name = dealership;
            var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];;
            var date = new Date();
            const month_year = months[date.getMonth()] + ' ' + date.getFullYear();

            $('#dealership').text(dealership);
            $('#month').text(month_year);

            var deal = document.getElementById("dealership")
            var month = document.getElementById("month");

            var headers = [deal, month]
        
        
            var fonts = [dealerFont, dateFont, statFont, textFont];
            

    
        const saDI = document.getElementById("saDI");
        const seDI = document.getElementById("seDI");
        const dIR = document.getElementById("dIR");
        const jMG = document.getElementById("jMG");

        var l =[jMG, dIR, seDI, saDI]
        var deferreds = [];

        x=0;y=0;z=0;
        var positions = [];
        for (var i=0; i<values.length; i++) {
            value = values[i]
            var position = {}
            if (i > 3) {
                if (i > 7) { 
                    position.y = $("#seRow1").data('_y') + 1.7;
                    position.x = $("#seRow1").data('_x1')  + (x * $("#seRow1").data('_x_spacing'))+.7;
                    x += 1
                } else {
                    position.y = $("#saRow2").data('_y') + 1.7;
                    position.x = $("#saRow2").data('_x1')  + (y * $("#saRow2").data('_x_spacing'))+.7;
                    y += 1
                }
            } else {
                position.y = $("#saRow1").data('_y') + 1.7;
                position.x = $("#saRow1").data('_x1')  + (z * $("#saRow1").data('_x_spacing')) + .7;
                z += 1
            }
            var deferred = $.Deferred();
            deferreds.push(deferred.promise());
            addText(doc, value, statFont, position, deferred)
            positions.push(position)

        };

        const pre = 'JMG_Marketing_Dealer_Intelligence_Report_' 
        const client = dealer_name.replace(/\s+/g, '_')
        const report_date = month_year.replace(/\s+/g, '-')

       

        for (var i=0; i<text_blurbs.length; i++) {
            text_array = []
            var pos = positions[i]
            position = {
                x: pos.x,
                y: pos.y + .03
            }
            var split = text_blurbs[i].split(' ');

            var newline = ''
            for (var j=0; j < split.length; j++) {
                if ((newline + split[j]).length < 26) {
                    if (newline != '') {
                        newline += ' '
                    }
                    newline += split[j]
                } else {
                    text_array.push(newline)
                    newline = split[j]
                }
            }
            text_array.push(newline)
            
            for (let i in text_array) {
                var deferred = $.Deferred();
                deferreds.push(deferred.promise());
                position.y += .16;
                addText(doc, text_array[i], textFont, position, deferred)
            }


            
        }
        
        for (var i=0; i<headers.length; i++) {
            var deferred = $.Deferred();
            deferreds.push(deferred.promise());
            addHeader(doc, headers[i], fonts[i], deferred)
        }

        for (var i=0; i < borders.length; i++) {
            var deferred = $.Deferred();
            deferreds.push(deferred.promise());
            generateCanvas(doc, borders[i], true, deferred);
        }
        

        for (var i=0; i < l.length; i++) {
            var deferred = $.Deferred();
            deferreds.push(deferred.promise());
            generateCanvas(doc,l[i], false, deferred);
        }
        
        for (var i=0; i < icon_elements.length; i++) {
            var deferred = $.Deferred();
            deferreds.push(deferred.promise());
            generateCanvas(doc,icon_elements[i], true, deferred);
        }


        function addText(doc, t, fn, pos, deferred) {
            fn(doc);
            doc.text(t, pos.x, pos.y, "center")
            deferred.resolve();
        }
        
        function addHeader(doc, p, fn, deferred) {
            fn(doc);
            doc.text(p.textContent, 4.25, p.getAttribute('data-_y'), "center")
            deferred.resolve();
        }

        function generateCanvas(doc, p, isIcon, deferred) {
            html2canvas(p).then(canvas => {
            var imgdata = canvas.toDataURL('image/png');
            if (isIcon) { 
                doc.addImage(imgdata, 'PNG',
                    p['data-_x'],
                    p['data-_y'],
                    p['data-_w'],
                    p['data-_h'],
                )
                deferred.resolve();
            } else {
            doc.addImage(imgdata, 'PNG',
                    $(`#${p.id}`).data('_x'), 
                    $(`#${p.id}`).data('_y'), 
                    $(`#${p.id}`).data('_w'),  
                    $(`#${p.id}`).data('_h'), 
                )
                deferred.resolve();
            }; 
            })
        };
        
        $.when.apply($, deferreds).then(function () {
            var name = pre+client+'_'+report_date+'.pdf';
            var binary = doc.output();
            var b64 = btoa(binary); 
            
            var link = document.createElement('a');
            link.innerHTML = 'Download PDF file';
            link.download = 'file.pdf';
            link.href = 'data:application/octet-stream;base64,' + b64;
            document.body.appendChild(link);
                            
            
            
        
        });

        };

    </script>
</body>
</html>